---
title: "Visualizing Uncertainty"
output:
  html_document: default
  word_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, comment = "")
library(tidyverse)
library(palmerpenguins)
```

## Confidence Intervals  

```{r}
data("penguins")
```


We can calculate confidence intervals to get the values we want to plot first. You can do the same things with percentile values using `quantile(variable, 0.25)` for the 25th percentile, for example.

```{r}
penguins %>%
  drop_na(body_mass_g) %>% 
  group_by(species) %>% 
  summarise(mean = mean(body_mass_g),
            sd = sd(body_mass_g),
            n = n(),
            se = sd/sqrt(n),
            me = qt(0.975, n-1)*se,
            cilow = mean - me,
            ciup = mean + me) -> ci_penguins_mass
ci_penguins_mass
```


Then we have two options. The first option will use `geom_segment` and plots two segments - one that is solid and has the width of one standard error on either side and the next has the confidence interval width but is more transparent.

```{r}
ci_penguins_mass %>% 
  ggplot(aes(x = mean, y = species)) +
  geom_point(aes(color = species), size = 3) +
  geom_segment(aes(x = mean - se, xend = mean + se, 
                   y = species, yend = species, 
                   color = species), size = 2) +
  geom_segment(aes(x = cilow, xend = ciup, 
                   y = species, yend = species, 
                   color = species), alpha = 0.5, linewidth = 2) +
  theme_minimal() +
  labs(x = "Body Mass (g)", y = "Penguin Species",
       title = "95% Confidence Intervals for Penguin Body Mass by Species") +
  scale_color_viridis_d(end = 0.85) +
  guides(color = "none") +
  #adds "padding" on ends of y axis
  scale_y_discrete(expand = c(0.25, 0.25))
```

We can also create the graph using `geom_errorbarh` for horizontal error bars, a common practice for publications. (WARNING: research suggests this is not an effective way to display uncertainty, despite being common).

```{r}
ci_penguins_mass %>% 
  ggplot(aes(x = mean, y = species)) +
  geom_point(aes(color = species), size = 3) +
  #errorbarh plots the endpoints we give (in this case, Confidence interval limits)
  geom_errorbarh(aes(xmin = cilow, xmax = ciup, 
                   y = species, color = species),
                 height = 0.25, size = 1) +
  theme_minimal() +
  labs(x = "Body Mass (g)", y = "Penguin Species",
       title = "95% Confidence Intervals for Penguin Body Mass by Species") +
  scale_color_viridis_d(end = 0.85) +
  guides(color = "none") +
  scale_y_discrete(expand = c(0.25, 0.25))
```

We can even include the data in our graph as well to show the confidence interval without hiding the variability. (NOTE: this is much better than the CI/error bars alone)

```{r}
ci_penguins_mass %>% 
  ggplot(aes(x = mean, y = species)) +
  geom_point(aes(color = species), size = 3) +
  geom_errorbarh(aes(xmin = cilow, xmax = ciup, 
                   y = species, color = species),
                 height = 0.25, size = 1) +
  geom_jitter(data = penguins, aes(x = body_mass_g, y = species, color = species), 
              height = 0.1, alpha = 0.1) +
  theme_minimal() +
  labs(x = "Body Mass (g)", y = "Penguin Species",
       title = "95% Confidence Intervals for Penguin Body Mass by Species") +
  scale_color_viridis_d(end = 0.85) +
  guides(color = "none") +
  scale_y_discrete(expand = c(0.25, 0.25))
```


Finally - if we specify `se = TRUE` and the `level` in `geom_smooth` we can easily add on a confidence interval. To add a prediction interval we would have to estimate the values using the `predict` function and plot it manually using `geom_ribbon`.

```{r}
penguins %>% 
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE, level = 0.95) 
  
```

